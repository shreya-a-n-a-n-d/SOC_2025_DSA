class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        return generatePermutations(nums);
    }
    vector<vector<int>> generatePermutations(vector<int> nums) {
        vector<vector<int>> result;
        if (nums.size() == 1) {
            vector<int> single;
            single.push_back(nums[0]);
            result.push_back(single);
            return result;
        }
        int last = nums.back();
        nums.pop_back();
        vector<vector<int>> temp = generatePermutations(nums);
        for (auto v : temp) {
            for (int i = 0; i <= v.size(); ++i) {
                vector<int> newV;
                for (int j = 0; j < i; ++j) {
                    newV.push_back(v[j]);
                }
                newV.push_back(last);
                for (int j = i; j < v.size(); ++j) {
                    newV.push_back(v[j]);
                }
                result.push_back(newV);
            }
        }
        return result;
    }
};
