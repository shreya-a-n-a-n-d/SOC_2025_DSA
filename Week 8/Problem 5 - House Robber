class Solution {
public:
    int robHouses(vector<int>& nums, int start, vector<int>& dp) {
        if(start == nums.size()-1)
            return nums[nums.size() - 1];
        if(start == nums.size()-2)
            return max(nums[nums.size()-1], nums[nums.size()-2]);
        if(dp[start]!= -1) {
            return dp[start];
        }
        if(start == nums.size()-3) 
            return max(nums[nums.size()-1] + nums[nums.size()-3], nums[nums.size()-2]);
        dp[start] = max(nums[start] + robHouses(nums, start+2, dp), nums[start+1] + robHouses(nums, start + 3, dp));
        return dp[start];
    }
    int rob(vector<int>& nums) {
        vector<int> dp(nums.size(), -1);
        return robHouses(nums, 0, dp);
    }
};
